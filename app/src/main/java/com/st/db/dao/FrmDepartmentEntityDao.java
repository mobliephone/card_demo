package com.st.db.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.st.db.entity.FrmDepartmentEntity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "FRM_DEPARTMENT_ENTITY".
*/
public class FrmDepartmentEntityDao extends AbstractDao<FrmDepartmentEntity, String> {

    public static final String TABLENAME = "FRM_DEPARTMENT_ENTITY";

    /**
     * Properties of entity FrmDepartmentEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Glbm = new Property(0, String.class, "glbm", true, "GLBM");
        public final static Property Bmmc = new Property(1, String.class, "bmmc", false, "BMMC");
        public final static Property Bmjc = new Property(2, String.class, "bmjc", false, "BMJC");
        public final static Property Yzmc = new Property(3, String.class, "yzmc", false, "YZMC");
        public final static Property Bmjb = new Property(4, String.class, "bmjb", false, "BMJB");
        public final static Property Kclyw = new Property(5, String.class, "kclyw", false, "KCLYW");
        public final static Property Ywlb = new Property(6, String.class, "ywlb", false, "YWLB");
        public final static Property Fzr = new Property(7, String.class, "fzr", false, "FZR");
        public final static Property Lxr = new Property(8, String.class, "lxr", false, "LXR");
        public final static Property Lxdh = new Property(9, String.class, "lxdh", false, "LXDH");
        public final static Property Czhm = new Property(10, String.class, "czhm", false, "CZHM");
        public final static Property Lxdz = new Property(11, String.class, "lxdz", false, "LXDZ");
        public final static Property Sjbm = new Property(12, String.class, "sjbm", false, "SJBM");
        public final static Property Bz = new Property(13, String.class, "bz", false, "BZ");
        public final static Property Jlzt = new Property(14, String.class, "jlzt", false, "JLZT");
        public final static Property Gxsj = new Property(15, String.class, "gxsj", false, "GXSJ");
        public final static Property Type = new Property(16, String.class, "type", false, "TYPE");
        public final static Property Yhjb = new Property(17, String.class, "yhjb", false, "YHJB");
        public final static Property Fzjg = new Property(18, String.class, "fzjg", false, "FZJG");
        public final static Property City = new Property(19, String.class, "city", false, "CITY");
    }


    public FrmDepartmentEntityDao(DaoConfig config) {
        super(config);
    }
    
    public FrmDepartmentEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"FRM_DEPARTMENT_ENTITY\" (" + //
                "\"GLBM\" TEXT PRIMARY KEY NOT NULL ," + // 0: glbm
                "\"BMMC\" TEXT," + // 1: bmmc
                "\"BMJC\" TEXT," + // 2: bmjc
                "\"YZMC\" TEXT," + // 3: yzmc
                "\"BMJB\" TEXT," + // 4: bmjb
                "\"KCLYW\" TEXT," + // 5: kclyw
                "\"YWLB\" TEXT," + // 6: ywlb
                "\"FZR\" TEXT," + // 7: fzr
                "\"LXR\" TEXT," + // 8: lxr
                "\"LXDH\" TEXT," + // 9: lxdh
                "\"CZHM\" TEXT," + // 10: czhm
                "\"LXDZ\" TEXT," + // 11: lxdz
                "\"SJBM\" TEXT," + // 12: sjbm
                "\"BZ\" TEXT," + // 13: bz
                "\"JLZT\" TEXT," + // 14: jlzt
                "\"GXSJ\" TEXT," + // 15: gxsj
                "\"TYPE\" TEXT," + // 16: type
                "\"YHJB\" TEXT," + // 17: yhjb
                "\"FZJG\" TEXT," + // 18: fzjg
                "\"CITY\" TEXT);"); // 19: city
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"FRM_DEPARTMENT_ENTITY\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, FrmDepartmentEntity entity) {
        stmt.clearBindings();
 
        String glbm = entity.getGlbm();
        if (glbm != null) {
            stmt.bindString(1, glbm);
        }
 
        String bmmc = entity.getBmmc();
        if (bmmc != null) {
            stmt.bindString(2, bmmc);
        }
 
        String bmjc = entity.getBmjc();
        if (bmjc != null) {
            stmt.bindString(3, bmjc);
        }
 
        String yzmc = entity.getYzmc();
        if (yzmc != null) {
            stmt.bindString(4, yzmc);
        }
 
        String bmjb = entity.getBmjb();
        if (bmjb != null) {
            stmt.bindString(5, bmjb);
        }
 
        String kclyw = entity.getKclyw();
        if (kclyw != null) {
            stmt.bindString(6, kclyw);
        }
 
        String ywlb = entity.getYwlb();
        if (ywlb != null) {
            stmt.bindString(7, ywlb);
        }
 
        String fzr = entity.getFzr();
        if (fzr != null) {
            stmt.bindString(8, fzr);
        }
 
        String lxr = entity.getLxr();
        if (lxr != null) {
            stmt.bindString(9, lxr);
        }
 
        String lxdh = entity.getLxdh();
        if (lxdh != null) {
            stmt.bindString(10, lxdh);
        }
 
        String czhm = entity.getCzhm();
        if (czhm != null) {
            stmt.bindString(11, czhm);
        }
 
        String lxdz = entity.getLxdz();
        if (lxdz != null) {
            stmt.bindString(12, lxdz);
        }
 
        String sjbm = entity.getSjbm();
        if (sjbm != null) {
            stmt.bindString(13, sjbm);
        }
 
        String bz = entity.getBz();
        if (bz != null) {
            stmt.bindString(14, bz);
        }
 
        String jlzt = entity.getJlzt();
        if (jlzt != null) {
            stmt.bindString(15, jlzt);
        }
 
        String gxsj = entity.getGxsj();
        if (gxsj != null) {
            stmt.bindString(16, gxsj);
        }
 
        String type = entity.getType();
        if (type != null) {
            stmt.bindString(17, type);
        }
 
        String yhjb = entity.getYhjb();
        if (yhjb != null) {
            stmt.bindString(18, yhjb);
        }
 
        String fzjg = entity.getFzjg();
        if (fzjg != null) {
            stmt.bindString(19, fzjg);
        }
 
        String city = entity.getCity();
        if (city != null) {
            stmt.bindString(20, city);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, FrmDepartmentEntity entity) {
        stmt.clearBindings();
 
        String glbm = entity.getGlbm();
        if (glbm != null) {
            stmt.bindString(1, glbm);
        }
 
        String bmmc = entity.getBmmc();
        if (bmmc != null) {
            stmt.bindString(2, bmmc);
        }
 
        String bmjc = entity.getBmjc();
        if (bmjc != null) {
            stmt.bindString(3, bmjc);
        }
 
        String yzmc = entity.getYzmc();
        if (yzmc != null) {
            stmt.bindString(4, yzmc);
        }
 
        String bmjb = entity.getBmjb();
        if (bmjb != null) {
            stmt.bindString(5, bmjb);
        }
 
        String kclyw = entity.getKclyw();
        if (kclyw != null) {
            stmt.bindString(6, kclyw);
        }
 
        String ywlb = entity.getYwlb();
        if (ywlb != null) {
            stmt.bindString(7, ywlb);
        }
 
        String fzr = entity.getFzr();
        if (fzr != null) {
            stmt.bindString(8, fzr);
        }
 
        String lxr = entity.getLxr();
        if (lxr != null) {
            stmt.bindString(9, lxr);
        }
 
        String lxdh = entity.getLxdh();
        if (lxdh != null) {
            stmt.bindString(10, lxdh);
        }
 
        String czhm = entity.getCzhm();
        if (czhm != null) {
            stmt.bindString(11, czhm);
        }
 
        String lxdz = entity.getLxdz();
        if (lxdz != null) {
            stmt.bindString(12, lxdz);
        }
 
        String sjbm = entity.getSjbm();
        if (sjbm != null) {
            stmt.bindString(13, sjbm);
        }
 
        String bz = entity.getBz();
        if (bz != null) {
            stmt.bindString(14, bz);
        }
 
        String jlzt = entity.getJlzt();
        if (jlzt != null) {
            stmt.bindString(15, jlzt);
        }
 
        String gxsj = entity.getGxsj();
        if (gxsj != null) {
            stmt.bindString(16, gxsj);
        }
 
        String type = entity.getType();
        if (type != null) {
            stmt.bindString(17, type);
        }
 
        String yhjb = entity.getYhjb();
        if (yhjb != null) {
            stmt.bindString(18, yhjb);
        }
 
        String fzjg = entity.getFzjg();
        if (fzjg != null) {
            stmt.bindString(19, fzjg);
        }
 
        String city = entity.getCity();
        if (city != null) {
            stmt.bindString(20, city);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public FrmDepartmentEntity readEntity(Cursor cursor, int offset) {
        FrmDepartmentEntity entity = new FrmDepartmentEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // glbm
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // bmmc
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // bmjc
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // yzmc
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // bmjb
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // kclyw
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // ywlb
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // fzr
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // lxr
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // lxdh
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // czhm
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // lxdz
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // sjbm
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // bz
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // jlzt
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // gxsj
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // type
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // yhjb
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // fzjg
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19) // city
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, FrmDepartmentEntity entity, int offset) {
        entity.setGlbm(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setBmmc(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setBmjc(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setYzmc(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setBmjb(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setKclyw(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setYwlb(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFzr(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setLxr(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setLxdh(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setCzhm(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setLxdz(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setSjbm(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setBz(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setJlzt(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setGxsj(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setType(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setYhjb(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setFzjg(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setCity(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
     }
    
    @Override
    protected final String updateKeyAfterInsert(FrmDepartmentEntity entity, long rowId) {
        return entity.getGlbm();
    }
    
    @Override
    public String getKey(FrmDepartmentEntity entity) {
        if(entity != null) {
            return entity.getGlbm();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(FrmDepartmentEntity entity) {
        return entity.getGlbm() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
